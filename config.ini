target_column = text
_PARALLEL = True
_VERBOSE = True

[import_data]

    input_data_directories = datasets,
    output_data_directory  = data_import
    merge_columns = title, abstract

[phrase]

    f_abbreviations = abbreviations.csv
    output_data_directory = data_document_scores/

[parse]

    output_data_directory = data_parsed
    pipeline = dedash, titlecaps, replace_acronyms, separated_parenthesis, replace_from_dictionary, token_replacement, decaps_text, pos_tokenizer

    [[replace_from_dictionary]]
	prefix = 'MeSH_'
	
    [[replace_acronyms]]
	prefix = 'PHRASE'

   [[separated_parenthesis]]
        # Only keep long parenthetical content
	min_keep_length=10

    [[pos_tokenizer]]
        POS_blacklist = connector, cardinal, pronoun, symbol, punctuation, modal_verb, adverb, verb, w_word, adjective

[embed]

    input_data_directory  = data_parsed
    output_data_directory = data_embeddings
    
    embedding_commands    = w2v_embedding,

    [[w2v_embedding]]      
        f_db = w2v.gensim
      	skip_gram = 0
      	hierarchical_softmax = 1
        epoch_n = 30
        window = 5
	negative = 0
        sample = 1e-5
        size = 300
        min_count = 10

[score]

    output_data_directory = data_document_scores
    f_db  = document_scores.h5

    count_commands = term_document_frequency, term_frequency, 
    score_commands = score_unique_IDF, score_simple,
    
    compute_reduced_representation = True

    [[negative_weights]]
        # Sample negative weights, adjust as needed
        understand = 0.15   
        scientific = 0.25
	author = 0.5
	possibility = 0.5

    [[reduced_representation]]
        n_components = 25

    [[term_frequency]]
        f_db = TF.csv

    [[term_document_frequency]]   
        f_db = TDF.csv
	

[predict]
    categorical_columns = journal,

    n_estimators = 200
    cross_validation_folds = 12
  
    use_SMOTE = False
    use_reduced = True
    use_meta = True
  
    meta_methods = unique_IDF,

    output_data_directory = data_predict
    extra_columns = journal,title,

[metacluster]

    score_method = unique_IDF

    subcluster_m = 1000
    subcluster_kn = 15

    subcluster_pcut = 0.80
    subcluster_repeats = 1

    output_data_directory = data_clustering
    f_centroids = meta_cluster_centroids.h5

[postprocessing]

    compute_dispersion = True
    output_data_directory = results
    master_columns = PMID, title

    [[LIME_explainer]]
	metacluster_cosine_minsim = 0.6
	score_method = unique_IDF    
	n_lime_samples = 25 # Make this higher for more accuracy
	n_lime_features = 50
	n_estimators = 50
