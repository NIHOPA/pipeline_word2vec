#target_columns  = abstract,specificAims,
target_columns  = abstract,

#_PARALLEL = False
#_FORCE = False
    
_PARALLEL = True
_FORCE = False

[cluster]

    predict_target_directory = data_sql/
    
    score_method = simple_TF
    score_column = abstract

    output_data_directory = data_clustering
    f_cluster = clustering.h5
    #clustering_commands = spectral_clustering, hdbscan_clustering
    clustering_commands = spectral_clustering,
    command_whitelist = PLoS_compbio,

    [[spectral_clustering]]
        n_clusters = 4

    [[hdbscan_clustering]]
        min_cluster_size = 30
    
[import_data]

    input_data_directories = datasets,
    output_data_directory  = data_sql
    
    data_type = csv
    output_table = original

[predict]
    categorical_columns = journal,
    
    #categorical_columns = is_clinical,is_translational,is_basic

    n_estimators = 200
    cross_validation_folds = 10
    meta_methods = simple, unique, simple_TF

[embedding]

    input_data_directory  = data_parsed
    output_data_directory = data_embeddings
    embedding_commands    = w2v_embedding,
    #embedding_commands    = w2v_embedding, d2v_embedding

    [[w2v_embedding]]      
        f_db = w2v.gensim
        epoch_n = 80
        window = 5
        negative = 5
        sample = 1e-5
        size = 300
        min_count = 10

    [[d2v_embedding]]      
        f_db = d2v.gensim
        epoch_n = 80
        window = 5
        negative = 5
        sample = 1e-5
        size = 300
        min_count = 10

[score]

    output_data_directory = data_document_scores
    mapreduce_commands    = term_document_frequency, term_frequency
    globaldata_commands   = document_scores,
   
    [[term_frequency]]
        f_db = TF.sqlite
        command_whitelist =
    [[term_document_frequency]]   
        f_db = TF.sqlite

    [[document_scores]]
        methods = simple_TF, simple, unique 
        f_db  = document_scores.h5
        #command_whitelist = bio,    

[phrase_identification]

    f_abbreviations = abbreviations.sqlite
    output_data_directory = data_document_scores
    output_table = abbreviations

[parse]

    output_table = parsed
    output_data_directory = data_parsed
    
    pipeline = replace_phrases, remove_parenthesis, token_replacement, decaps_text, pos_tokenizer

    [[replace_phrases]]
        input_data_directory = data_document_scores
        f_abbreviations = abbreviations.sqlite

    [[pos_tokenizer]]
        POS_blacklist = connector, cardinal, pronoun, symbol, punctuation, modal_verb, adverb, verb, w_word
